{"version":3,"sources":["views/Nav/Nav.module.css","redux/auth/auth-operations.js","redux/auth/auth-actios.js","components/UserMenu/UserMenu.module.css","views/AuthNav/AuthNav.module.css","components/Container/Container.module.css","components/AppBar/AppBar.module.css","redux/contact/contact-actions.js","components/Container/Container.js","redux/auth/auth-selectors.js","components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","views/routes.js","views/AuthNav/AuthNav.js","views/Nav/Nav.js","components/UserMenu/UserMenu.js","components/AppBar/AppBar.js","App.js","redux/contact/contacts-reducer.js","redux/auth/auth-reducer.js","redux/store.js","index.js"],"names":["module","exports","axios","defaults","baseURL","token","headers","common","Authorization","signup","payload","dispatch","a","authActions","post","result","data","message","login","then","catch","error","logout","getCurrentUser","getState","persistedToken","auth","get","loginRequest","createAction","loginSuccess","loginError","signupRequest","signupSuccess","signupError","logoutRequest","logoutSuccess","logoutError","currentRequest","currentSuccess","currentError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","contactFilter","Container","children","className","style","container","getUseremail","state","user","email","isAuthenticated","isAuthorized","getIsisAuthorizedSelector","PrivateRoute","redirectTo","routeProps","isLoadID","useSelector","to","PublicRoute","shouldRedirect","restricted","routes","HOME","MOVIES","CONTACTS","REGISTER","LOGIN","AuthNav","styles","activeLink","color","backgroundColor","borderColor","s","link","activeStyle","Nav","IsisAuthorized","navList","navListItem","exact","Link","activeClassName","linkFocusColor","UserMenu","useDispatch","name","button","type","onClick","AppBar","header","App","HomeView","lazy","ContactsView","RegisterView","LoginView","useEffect","fallback","path","items","createReducer","_","filter","id","loading","combineReducers","initialState","isLoading","action","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","logger","authPersistConfig","key","storage","whiteList","store","configureStore","reducer","contacts","counterReducer","persistReducer","authReducer","devTools","process","persistor","persistStore","ReactDom","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7260b0df.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__2xKKL\",\"navList\":\"Nav_navList__3Q2P1\",\"navListItem\":\"Nav_navListItem__3o3m-\",\"Link\":\"Nav_Link__3ug2C\",\"linkFocusColor\":\"Nav_linkFocusColor__NCD3Y\"};","import axios from 'axios';\r\nimport * as authActions from './auth-actios';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com/';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nexport const signup = (payload) => async (dispatch) => {\r\n  dispatch(authActions.signupRequest());\r\n\r\n  try {\r\n    const result = await axios.post('/users/signup', payload);\r\n    token.set(result.data.token);\r\n    dispatch(authActions.signupSuccess(result.data));\r\n  } catch (error) {\r\n    dispatch(authActions.signupError(error.message));\r\n  }\r\n};\r\n\r\nexport const login = (payload) => (dispatch) => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  axios\r\n    .post('/users/login', payload)\r\n    .then(({ data }) => {\r\n      token.set(data.token);\r\n      dispatch(authActions.loginSuccess(data));\r\n    })\r\n\r\n    .catch((error) => dispatch(authActions.loginError(error.message)));\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  dispatch(authActions.logoutRequest());\r\n  try {\r\n    await axios.post('/users/logout');\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\nexport const getCurrentUser = () => (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n  token.set(persistedToken);\r\n  dispatch(authActions.currentRequest());\r\n  axios\r\n    .get('/users/current')\r\n    .then(({ data }) => dispatch(authActions.currentSuccess(data)))\r\n    .catch((error) => dispatch(authActions.currentError(error.message)));\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const loginRequest = createAction('/users/login/request');\r\nexport const loginSuccess = createAction('/users/login/success');\r\nexport const loginError = createAction('/users/login/error');\r\n\r\nexport const signupRequest = createAction('/users/signup/request');\r\nexport const signupSuccess = createAction('/users/signup/success');\r\nexport const signupError = createAction('/users/signup/error');\r\n\r\nexport const logoutRequest = createAction('/users/logout/request');\r\nexport const logoutSuccess = createAction('/users/logout/success');\r\nexport const logoutError = createAction('/users/logout/error');\r\n\r\nexport const currentRequest = createAction('/users/current/request');\r\nexport const currentSuccess = createAction('/users/current/success');\r\nexport const currentError = createAction('/users/current/error');\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__2yP1G\",\"name\":\"UserMenu_name__3z4D4\",\"button\":\"UserMenu_button__2wvcs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__3l7BL\",\"activeLink\":\"AuthNav_activeLink__2AcLJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__M2Pj_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__Mp2hi\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest'\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess'\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest'\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess'\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const contactFilter = createAction('contacts/filter');\r\n\r\n// export const contactAdd = createAction('contacts/add', (name, number) => ({\r\n//   payload: {\r\n//     id: Date.now(),\r\n//     name,\r\n//     number,\r\n//   },\r\n// }));\r\n\r\n// export const contactAdd = (name, number) => {\r\n//   return {\r\n//     type: actionType.ADD,\r\n//     payload: {\r\n//       id: Date.now(),\r\n//       name,\r\n//       number,\r\n//     },\r\n//   };\r\n// };\r\n\r\n// export const contactDelete = (id) => {\r\n//   return {\r\n//     type: actionType.DELETE,\r\n//     payload: id,\r\n//   };\r\n// };\r\n\r\n// export const conatactFilter = (value) => ({\r\n//   type: actionType.CHANGE_FILTER,\r\n//   payload: value,\r\n// });\r\n","import React from 'react';\r\nimport style from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={style.container}>{children}</div>\r\n);\r\n\r\nexport default Container;\r\n","export const getUseremail = (state) => state.auth.user.email;\r\nexport const isAuthenticated = (state) => state.auth.isAuthorized;\r\nexport const getIsisAuthorizedSelector = (state) => state.auth.isAuthorized;\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getIsisAuthorizedSelector } from '../../redux/auth/auth-selectors';\r\n\r\n/**\r\n * 1. Он должен повторять API Route\r\n *  2. Он должен рендерить Route\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на redirectTo\r\n */\r\n\r\nexport default function PrivateRoute({\r\n  children,\r\n  redirectTo = '/',\r\n  ...routeProps\r\n}) {\r\n  const isLoadID = useSelector(getIsisAuthorizedSelector);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoadID ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getIsisAuthorizedSelector } from '../../redux/auth/auth-selectors';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и юзер залогинен, рендерит редирект на redirectTo\r\n * - В противном случае рендерит компонент\r\n *\r\n */\r\n\r\nexport default function PublicRoute({ children, redirectTo, ...routeProps }) {\r\n  const isLoadID = useSelector(getIsisAuthorizedSelector);\r\n  const shouldRedirect = isLoadID && routeProps.restricted;\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n    </Route>\r\n  );\r\n}\r\n","const routes = {\r\n  HOME: '/',\r\n  MOVIES: '/movies',\r\n  CONTACTS: '/contacts',\r\n  REGISTER: '/register',\r\n  LOGIN: '/login',\r\n};\r\n\r\nexport default routes;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './AuthNav.module.css';\r\nimport routes from '../routes';\r\n\r\nconst AuthNav = () => {\r\n  const styles = {\r\n    activeLink: {\r\n      color: '#ffffff',\r\n      backgroundColor: 'rgb(70, 100, 100)',\r\n      borderColor: 'rgb(50, 80, 100)',\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavLink\r\n        to={routes.REGISTER}\r\n        className={s.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Sign up\r\n      </NavLink>\r\n      <NavLink\r\n        to={routes.LOGIN}\r\n        className={s.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Sign in\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthNav;\r\n","import React from 'react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { getIsisAuthorizedSelector } from '../../redux/auth/auth-selectors';\r\nimport styles from './Nav.module.css';\r\nimport routes from '../routes';\r\n\r\nconst Nav = () => {\r\n  const IsisAuthorized = useSelector(getIsisAuthorizedSelector);\r\n\r\n  return (\r\n    <nav>\r\n      <ul className={styles.navList}>\r\n        <li className={styles.navListItem}>\r\n          <NavLink\r\n            exact\r\n            to={routes.HOME}\r\n            className={styles.Link}\r\n            activeClassName={styles.linkFocusColor}\r\n          >\r\n            Home\r\n          </NavLink>\r\n        </li>\r\n        {IsisAuthorized && (\r\n          <li className={styles.navListItem}>\r\n            <NavLink\r\n              exact\r\n              to={routes.CONTACTS}\r\n              className={styles.Link}\r\n              activeClassName={styles.linkFocusColor}\r\n            >\r\n              Contacts\r\n            </NavLink>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\nexport default Nav;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { getUseremail } from '../../redux/auth/auth-selectors';\r\nimport { logout } from '../../redux/auth/auth-operations';\r\nimport style from './UserMenu.module.css';\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const email = useSelector(getUseremail);\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <span className={style.name}>Hello, {email}!</span>\r\n      <button\r\n        className={style.button}\r\n        type=\"button\"\r\n        onClick={() => dispatch(logout())}\r\n      >\r\n        Log out\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import AuthNav from '../../views/AuthNav/AuthNav';\r\nimport { useSelector } from 'react-redux';\r\nimport Nav from '../../views/Nav/Nav';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\nimport style from '../AppBar/AppBar.module.css';\r\nimport { isAuthenticated } from '../../redux/auth/auth-selectors';\r\n\r\nconst AppBar = () => {\r\n  const isLoadID = useSelector(isAuthenticated);\r\n\r\n  return (\r\n    <header className={style.header}>\r\n      <Nav />\r\n\r\n      {isLoadID ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n};\r\nexport default AppBar;\r\n","import React, { Suspense, useEffect, lazy } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { useDispatch, connect } from 'react-redux';\nimport Container from './components/Container/Container';\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\nimport PublicRoute from './components/PublicRoute/PublicRoute';\nimport AppBar from './components/AppBar/AppBar';\nimport { getCurrentUser } from './redux/auth/auth-operations';\n// import ContactsView from './views/ContactsView/ContactsView';\n// import * as contactSelectors from '../src/redux/contact/contact-selectors';\n// import * as contactOperations from '../src/redux/contact/contact-operations';\n// import HomeView from './views/HomeView';\n// import RegisterView from './views/RegisterView/RegisterView';\n// import LoginView from './views/LoginView/LoginView';\nconst App = () => {\n  const HomeView = lazy(() =>\n    import('./views/HomeView' /* webpackChunkName: \"home-view\" */)\n  );\n\n  const ContactsView = lazy(() =>\n    import(\n      './views/ContactsView/ContactsView' /* webpackChunkName: \"contacts-view\" */\n    )\n  );\n\n  const RegisterView = lazy(() =>\n    import(\n      './views/RegisterView/RegisterView' /* webpackChunkName: \"register-view\" */\n    )\n  );\n\n  const LoginView = lazy(() =>\n    import('./views/LoginView/LoginView' /* webpackChunkName: \"login-view\" */)\n  );\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Container>\n        <Suspense fallback={<p>Loading...</p>}>\n          <AppBar />\n          <Switch>\n            <PublicRoute exact path=\"/\" restricted redirectTo=\"/contacts\">\n              <HomeView />\n            </PublicRoute>\n            <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n              <ContactsView />\n            </PrivateRoute>\n            <PublicRoute path=\"/register\" restricted redirectTo=\"/contacts\">\n              <RegisterView />\n            </PublicRoute>\n            <PublicRoute path=\"/login\" restricted redirectTo=\"/contacts\">\n              <LoginView />\n            </PublicRoute>\n          </Switch>\n        </Suspense>\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n\n// const mapStateToProps = (state) => {\n//   return {\n//     loading: contactSelectors.getLoading(state),\n//   };\n// };\n\n// export default connect(mapStateToProps, null)(App);\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  contactFilter,\r\n} from './contact-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [payload, ...state],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [contactFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContactsError]: (_, { payload }) => payload,\r\n  [addContactError]: (_, { payload }) => payload,\r\n  [deleteContactError]: (_, { payload }) => payload,\r\n  [fetchContactsRequest]: () => null,\r\n  [addContactRequest]: () => null,\r\n  [deleteContactRequest]: () => null,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n\r\n// const items = (state = contactinitialState, { type, payload }) => {\r\n//   switch (type) {\r\n//     case actionType.ADD:\r\n//       return [payload, ...state];\r\n\r\n//     case actionType.DELETE:\r\n//       return state.filter(({ id }) => id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filter = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case actionType.CHANGE_FILTER:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport * as authActions from './auth-actios';\r\n\r\nconst initialState = {\r\n  name: null,\r\n  email: null,\r\n};\r\n\r\nconst isAuthorized = createReducer(false, {\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.signupSuccess]: () => true,\r\n  [authActions.currentSuccess]: () => true,\r\n  [authActions.logoutSuccess]: () => false,\r\n  [authActions.currentError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.signupError]: () => false,\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n  [authActions.currentRequest]: () => true,\r\n  [authActions.currentSuccess]: () => false,\r\n  [authActions.currentError]: () => false,\r\n\r\n  [authActions.loginRequest]: () => true,\r\n  [authActions.loginSuccess]: () => false,\r\n  [authActions.loginError]: () => false,\r\n\r\n  [authActions.logoutRequest]: () => true,\r\n  [authActions.logoutSuccess]: () => false,\r\n  [authActions.logoutError]: () => false,\r\n\r\n  [authActions.signupRequest]: () => true,\r\n  [authActions.signupSuccess]: () => false,\r\n  [authActions.signupError]: () => false,\r\n});\r\n\r\nconst user = createReducer(initialState, {\r\n  [authActions.signupSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialState,\r\n  [authActions.currentSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.signupSuccess]: (_, action) => action.payload.token,\r\n  [authActions.loginSuccess]: (_, action) => action.payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.signupError]: () => (_, action) => action.payload,\r\n  [authActions.loginError]: () => (_, action) => action.payload,\r\n  [authActions.currentError]: () => (_, action) => action.payload,\r\n  [authActions.logoutError]: () => (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  isLoading,\r\n  error,\r\n  isAuthorized,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport counterReducer from './contact/contacts-reducer';\r\nimport authReducer from './auth/auth-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whiteList: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: counterReducer,\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n  },\r\n  middleware: middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n\r\n//\r\n// const rootReducer = combineReducers({\r\n//   contacts: persisterReducer(PersistConfig, counterReducer),\r\n// });\r\n\r\n// const persisterReducer = persistReducer(PersistConfig, rootReducer);\r\n\r\n// import { applyMiddleware, combineReducers } from 'redux';\r\n// const rootReducer = combineReducers({\r\n//   contacts: counterReducer,\r\n// });\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\n// const initialState = {\r\n//   contacts: {\r\n//     items: [\r\n//       { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n//       { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n//       { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n//       { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n//     ],\r\n//     filters: '',\r\n//   },\r\n// };\r\n\r\n// const reducer = (state = initialState, { type, payload }) => {\r\n//   switch (type) {\r\n//     case 'contacts/add':\r\n//       return {\r\n//         ...state,\r\n//         contacts: {\r\n//           ...state.contacts,\r\n//           items: [payload, ...state.contacts.items],\r\n//         },\r\n//       };\r\n\r\n//     case 'contacts/delete':\r\n//       return {\r\n//         ...state,\r\n//         contacts: {\r\n//           ...state.contacts,\r\n//           items: state.contacts.items.filter(({ id }) => id !== payload),\r\n//         },\r\n//       };\r\n\r\n//     case 'contacts/filter':\r\n//       return {\r\n//         ...state,\r\n//         contacts: {\r\n//           ...state.contacts,\r\n//           items: state.contacts.items.filter((name) =>\r\n//             name.toLowerCase().includes(state.contacts.filters.toLowerCase())\r\n//           ),\r\n//         },\r\n//       };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\n\nReactDom.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}