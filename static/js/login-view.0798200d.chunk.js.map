{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/LoginView/LoginView.module.css","views/LoginView/LoginView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","LoginView","dispatch","useDispatch","useState","email","setEmail","password","setPassword","onSubmit","e","preventDefault","login","className","style","form","label","type","name","placeholder","onChange","target"],"mappings":"6LAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,mBIJtGC,EAAOC,QAAU,CAAC,KAAO,wBAAwB,MAAQ,2B,iGCoD1CC,UAhDG,WAChB,IAAMC,EAAWC,cACjB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAcA,OACE,gCACE,sDAEA,uBAAMC,SAbW,SAACC,GACpBA,EAAEC,iBAEFT,EAASU,YAAM,CAAEP,QAAOE,cAExBD,EAAS,IACTE,EAAY,KAOoBK,UAAWC,IAAMC,KAA/C,UACE,wBAAOF,UAAWC,IAAME,MAAxB,0BAEE,uBACEC,KAAK,QACLC,KAAK,QACLC,YAAY,QACZzB,MAAOW,EACPe,SAxBgB,SAACV,GAAD,OAAOJ,EAASI,EAAEW,OAAO3B,aA2B7C,wBAAOmB,UAAWC,IAAME,MAAxB,qBAEE,uBACEC,KAAK,WACLC,KAAK,WACLC,YAAY,WACZzB,MAAOa,EACPa,SAjCmB,SAACV,GAAD,OAAOF,EAAYE,EAAEW,OAAO3B,aAoCnD,wBAAQuB,KAAK,SAAb","file":"static/js/login-view.0798200d.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginView_form__3lqSN\",\"label\":\"LoginView_label__1a2mG\"};","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../../redux/auth/auth-operations';\r\nimport style from './LoginView.module.css';\r\n\r\nconst LoginView = () => {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleChangeEmail = (e) => setEmail(e.target.value);\r\n  const handleChangePassword = (e) => setPassword(e.target.value);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(login({ email, password }));\r\n\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Sign in to Phonebook</h2>\r\n\r\n      <form onSubmit={handleSubmit} className={style.form}>\r\n        <label className={style.label}>\r\n          Email address\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={handleChangeEmail}\r\n          />\r\n        </label>\r\n        <label className={style.label}>\r\n          Password\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={handleChangePassword}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Enter</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginView;\r\n\r\n// const [email, setEmail] = useState('name@mail.ru');\r\n// const [password, setPassword] = useState('QW1234!');\r\n"],"sourceRoot":""}